<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ManagerLogMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.ManagerLog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="manager_id" jdbcType="INTEGER" property="managerId"/>
        <result column="before_json" jdbcType="VARCHAR" property="beforeJson"/>
        <result column="after_json" jdbcType="VARCHAR" property="afterJson"/>
        <result column="operator_id" jdbcType="INTEGER" property="operatorId"/>
        <result column="operator_IP" jdbcType="VARCHAR" property="operatorIp"/>
        <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, manager_id, before_json, after_json, operator_id, operator_IP, operate_time
  </sql>
    <select id="selectByExample" parameterType="com.example.demo.entity.ManagerLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from manager_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="PageSuffix"/>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from manager_log
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from manager_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.demo.entity.ManagerLogExample">
        delete from manager_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.demo.entity.ManagerLog">
    insert into manager_log (id, manager_id, before_json,
      after_json, operator_id, operator_IP,
      operate_time)
    values (#{id,jdbcType=INTEGER}, #{managerId,jdbcType=INTEGER}, #{beforeJson,jdbcType=VARCHAR},
      #{afterJson,jdbcType=VARCHAR}, #{operatorId,jdbcType=INTEGER}, #{operatorIp,jdbcType=VARCHAR},
      #{operateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.example.demo.entity.ManagerLog"
            useGeneratedKeys="true">
        insert into manager_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="managerId != null">
                manager_id,
            </if>
            <if test="beforeJson != null">
                before_json,
            </if>
            <if test="afterJson != null">
                after_json,
            </if>
            <if test="operatorId != null">
                operator_id,
            </if>
            <if test="operatorIp != null">
                operator_IP,
            </if>
            <if test="operateTime != null">
                operate_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="managerId != null">
                #{managerId,jdbcType=INTEGER},
            </if>
            <if test="beforeJson != null">
                #{beforeJson,jdbcType=VARCHAR},
            </if>
            <if test="afterJson != null">
                #{afterJson,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null">
                #{operatorId,jdbcType=INTEGER},
            </if>
            <if test="operatorIp != null">
                #{operatorIp,jdbcType=VARCHAR},
            </if>
            <if test="operateTime != null">
                #{operateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.demo.entity.ManagerLogExample" resultType="java.lang.Long">
        select count(*) from manager_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update manager_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.managerId != null">
                manager_id = #{record.managerId,jdbcType=INTEGER},
            </if>
            <if test="record.beforeJson != null">
                before_json = #{record.beforeJson,jdbcType=VARCHAR},
            </if>
            <if test="record.afterJson != null">
                after_json = #{record.afterJson,jdbcType=VARCHAR},
            </if>
            <if test="record.operatorId != null">
                operator_id = #{record.operatorId,jdbcType=INTEGER},
            </if>
            <if test="record.operatorIp != null">
                operator_IP = #{record.operatorIp,jdbcType=VARCHAR},
            </if>
            <if test="record.operateTime != null">
                operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update manager_log
        set id = #{record.id,jdbcType=INTEGER},
        manager_id = #{record.managerId,jdbcType=INTEGER},
        before_json = #{record.beforeJson,jdbcType=VARCHAR},
        after_json = #{record.afterJson,jdbcType=VARCHAR},
        operator_id = #{record.operatorId,jdbcType=INTEGER},
        operator_IP = #{record.operatorIp,jdbcType=VARCHAR},
        operate_time = #{record.operateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.ManagerLog">
        update manager_log
        <set>
            <if test="managerId != null">
                manager_id = #{managerId,jdbcType=INTEGER},
            </if>
            <if test="beforeJson != null">
                before_json = #{beforeJson,jdbcType=VARCHAR},
            </if>
            <if test="afterJson != null">
                after_json = #{afterJson,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=INTEGER},
            </if>
            <if test="operatorIp != null">
                operator_IP = #{operatorIp,jdbcType=VARCHAR},
            </if>
            <if test="operateTime != null">
                operate_time = #{operateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.ManagerLog">
    update manager_log
    set manager_id = #{managerId,jdbcType=INTEGER},
      before_json = #{beforeJson,jdbcType=VARCHAR},
      after_json = #{afterJson,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=INTEGER},
      operator_IP = #{operatorIp,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <sql id="PageSuffix">
        <if test="page != null">
            limit #{page.rowStart},#{page.pageSize}
        </if>
    </sql>
</mapper>
