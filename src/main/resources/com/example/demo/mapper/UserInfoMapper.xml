<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.UserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
      <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
      <result column="password" jdbcType="VARCHAR" property="password"/>
      <result column="encrypted" jdbcType="VARCHAR" property="encrypted"/>
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
      <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
      <result column="gender" jdbcType="BIT" property="gender"/>
      <result column="birthday" jdbcType="VARCHAR" property="birthday"/>
      <result column="email" jdbcType="VARCHAR" property="email"/>
      <result column="is_dealer" jdbcType="BIT" property="isDealer"/>
      <result column="balance" jdbcType="DOUBLE" property="balance"/>
      <result column="free_balance" jdbcType="DOUBLE" property="freeBalance"/>
      <result column="integral" jdbcType="INTEGER" property="integral"/>
      <result column="goods_count" jdbcType="INTEGER" property="goodsCount"/>
      <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
      <result column="status" jdbcType="BIT" property="status"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mobile, password, encrypted, nick_name, avatar_url, gender, birthday, email,
    is_dealer, balance, free_balance, integral, goods_count, create_date, status
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      select
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.UserInfo">
    insert into user_info (id, mobile, password,
      encrypted, nick_name, avatar_url,
      gender, birthday, email,
      is_dealer, balance, free_balance,
      integral, goods_count, create_date,
      status)
    values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{encrypted,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR},
      #{gender,jdbcType=BIT}, #{birthday,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{isDealer,jdbcType=BIT}, #{balance,jdbcType=DOUBLE}, #{freeBalance,jdbcType=DOUBLE},
      #{integral,jdbcType=INTEGER}, #{goodsCount,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP},
      #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.example.demo.entity.UserInfo" useGeneratedKeys="true">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
        <if test="mobile != null">
            mobile,
      </if>
        <if test="password != null">
            password,
      </if>
        <if test="encrypted != null">
            encrypted,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
        <if test="avatarUrl != null">
            avatar_url,
        </if>
        <if test="gender != null">
            gender,
        </if>
        <if test="birthday != null">
            birthday,
        </if>
        <if test="email != null">
            email,
        </if>
        <if test="isDealer != null">
            is_dealer,
        </if>
        <if test="balance != null">
            balance,
        </if>
        <if test="freeBalance != null">
            free_balance,
        </if>
        <if test="integral != null">
            integral,
      </if>
        <if test="goodsCount != null">
            goods_count,
      </if>
        <if test="createDate != null">
            create_date,
      </if>
        <if test="status != null">
            status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
        <if test="mobile != null">
            #{mobile,jdbcType=VARCHAR},
      </if>
        <if test="password != null">
            #{password,jdbcType=VARCHAR},
      </if>
        <if test="encrypted != null">
            #{encrypted,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
        <if test="avatarUrl != null">
            #{avatarUrl,jdbcType=VARCHAR},
        </if>
        <if test="gender != null">
            #{gender,jdbcType=BIT},
        </if>
        <if test="birthday != null">
            #{birthday,jdbcType=VARCHAR},
        </if>
        <if test="email != null">
            #{email,jdbcType=VARCHAR},
        </if>
        <if test="isDealer != null">
            #{isDealer,jdbcType=BIT},
        </if>
        <if test="balance != null">
            #{balance,jdbcType=DOUBLE},
        </if>
        <if test="freeBalance != null">
            #{freeBalance,jdbcType=DOUBLE},
        </if>
        <if test="integral != null">
            #{integral,jdbcType=INTEGER},
      </if>
        <if test="goodsCount != null">
            #{goodsCount,jdbcType=INTEGER},
      </if>
        <if test="createDate != null">
            #{createDate,jdbcType=TIMESTAMP},
      </if>
        <if test="status != null">
            #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.UserInfoExample" resultType="java.lang.Long">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
        <if test="record.mobile != null">
            mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
        <if test="record.password != null">
            password = #{record.password,jdbcType=VARCHAR},
      </if>
        <if test="record.encrypted != null">
            encrypted = #{record.encrypted,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
        <if test="record.avatarUrl != null">
            avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
        </if>
        <if test="record.gender != null">
            gender = #{record.gender,jdbcType=BIT},
        </if>
        <if test="record.birthday != null">
            birthday = #{record.birthday,jdbcType=VARCHAR},
        </if>
        <if test="record.email != null">
            email = #{record.email,jdbcType=VARCHAR},
        </if>
        <if test="record.isDealer != null">
            is_dealer = #{record.isDealer,jdbcType=BIT},
        </if>
        <if test="record.balance != null">
            balance = #{record.balance,jdbcType=DOUBLE},
        </if>
        <if test="record.freeBalance != null">
            free_balance = #{record.freeBalance,jdbcType=DOUBLE},
        </if>
        <if test="record.integral != null">
            integral = #{record.integral,jdbcType=INTEGER},
      </if>
        <if test="record.goodsCount != null">
            goods_count = #{record.goodsCount,jdbcType=INTEGER},
      </if>
        <if test="record.createDate != null">
            create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
        <if test="record.status != null">
            status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set id = #{record.id,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      encrypted = #{record.encrypted,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=BIT},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      is_dealer = #{record.isDealer,jdbcType=BIT},
      balance = #{record.balance,jdbcType=DOUBLE},
      free_balance = #{record.freeBalance,jdbcType=DOUBLE},
      integral = #{record.integral,jdbcType=INTEGER},
      goods_count = #{record.goodsCount,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.UserInfo">
    update user_info
    <set>
        <if test="mobile != null">
            mobile = #{mobile,jdbcType=VARCHAR},
      </if>
        <if test="password != null">
            password = #{password,jdbcType=VARCHAR},
      </if>
        <if test="encrypted != null">
            encrypted = #{encrypted,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
        <if test="avatarUrl != null">
            avatar_url = #{avatarUrl,jdbcType=VARCHAR},
        </if>
        <if test="gender != null">
            gender = #{gender,jdbcType=BIT},
        </if>
        <if test="birthday != null">
            birthday = #{birthday,jdbcType=VARCHAR},
        </if>
        <if test="email != null">
            email = #{email,jdbcType=VARCHAR},
      </if>
        <if test="isDealer != null">
            is_dealer = #{isDealer,jdbcType=BIT},
      </if>
        <if test="balance != null">
            balance = #{balance,jdbcType=DOUBLE},
      </if>
        <if test="freeBalance != null">
            free_balance = #{freeBalance,jdbcType=DOUBLE},
        </if>
        <if test="integral != null">
            integral = #{integral,jdbcType=INTEGER},
        </if>
        <if test="goodsCount != null">
            goods_count = #{goodsCount,jdbcType=INTEGER},
        </if>
        <if test="createDate != null">
            create_date = #{createDate,jdbcType=TIMESTAMP},
        </if>
        <if test="status != null">
            status = #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.UserInfo">
    update user_info
    set mobile = #{mobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      encrypted = #{encrypted,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      birthday = #{birthday,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_dealer = #{isDealer,jdbcType=BIT},
      balance = #{balance,jdbcType=DOUBLE},
      free_balance = #{freeBalance,jdbcType=DOUBLE},
      integral = #{integral,jdbcType=INTEGER},
      goods_count = #{goodsCount,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="PageSuffix">
    <if test="page != null">
      limit #{page.rowStart},#{page.pageSize}
    </if>
  </sql>
</mapper>
