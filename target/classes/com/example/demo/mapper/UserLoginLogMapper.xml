<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserLoginLogMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.UserLoginLog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="country_id" jdbcType="VARCHAR" property="countryId"/>
        <result column="country" jdbcType="VARCHAR" property="country"/>
        <result column="region_id" jdbcType="VARCHAR" property="regionId"/>
        <result column="region" jdbcType="VARCHAR" property="region"/>
        <result column="city_id" jdbcType="VARCHAR" property="cityId"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="county_id" jdbcType="VARCHAR" property="countyId"/>
        <result column="county" jdbcType="VARCHAR" property="county"/>
        <result column="area_id" jdbcType="VARCHAR" property="areaId"/>
        <result column="area" jdbcType="VARCHAR" property="area"/>
        <result column="isp_id" jdbcType="VARCHAR" property="ispId"/>
        <result column="isp" jdbcType="VARCHAR" property="isp"/>
        <result column="ip_address" jdbcType="VARCHAR" property="ipAddress"/>
        <result column="login_time" jdbcType="TIMESTAMP" property="loginTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_id, country_id, country, region_id, region, city_id, city, county_id, county,
    area_id, area, isp_id, isp, ip_address, login_time
  </sql>
    <select id="selectByExample" parameterType="com.example.demo.entity.UserLoginLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_login_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="PageSuffix"/>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_login_log
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_login_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.demo.entity.UserLoginLogExample">
        delete from user_login_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.demo.entity.UserLoginLog">
    insert into user_login_log (id, user_id, country_id,
      country, region_id, region,
      city_id, city, county_id,
      county, area_id, area,
      isp_id, isp, ip_address,
      login_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{countryId,jdbcType=VARCHAR},
      #{country,jdbcType=VARCHAR}, #{regionId,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR},
      #{cityId,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{countyId,jdbcType=VARCHAR},
      #{county,jdbcType=VARCHAR}, #{areaId,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR},
      #{ispId,jdbcType=VARCHAR}, #{isp,jdbcType=VARCHAR}, #{ipAddress,jdbcType=VARCHAR},
      #{loginTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.example.demo.entity.UserLoginLog"
            useGeneratedKeys="true">
        insert into user_login_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="countryId != null">
                country_id,
            </if>
            <if test="country != null">
                country,
            </if>
            <if test="regionId != null">
                region_id,
            </if>
            <if test="region != null">
                region,
            </if>
            <if test="cityId != null">
                city_id,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="countyId != null">
                county_id,
            </if>
            <if test="county != null">
                county,
            </if>
            <if test="areaId != null">
                area_id,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="ispId != null">
                isp_id,
            </if>
            <if test="isp != null">
                isp,
            </if>
            <if test="ipAddress != null">
                ip_address,
            </if>
            <if test="loginTime != null">
                login_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="countryId != null">
                #{countryId,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                #{country,jdbcType=VARCHAR},
            </if>
            <if test="regionId != null">
                #{regionId,jdbcType=VARCHAR},
            </if>
            <if test="region != null">
                #{region,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                #{cityId,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="countyId != null">
                #{countyId,jdbcType=VARCHAR},
            </if>
            <if test="county != null">
                #{county,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="ispId != null">
                #{ispId,jdbcType=VARCHAR},
            </if>
            <if test="isp != null">
                #{isp,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null">
                #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="loginTime != null">
                #{loginTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.demo.entity.UserLoginLogExample" resultType="java.lang.Long">
        select count(*) from user_login_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_login_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.countryId != null">
                country_id = #{record.countryId,jdbcType=VARCHAR},
            </if>
            <if test="record.country != null">
                country = #{record.country,jdbcType=VARCHAR},
            </if>
            <if test="record.regionId != null">
                region_id = #{record.regionId,jdbcType=VARCHAR},
            </if>
            <if test="record.region != null">
                region = #{record.region,jdbcType=VARCHAR},
            </if>
            <if test="record.cityId != null">
                city_id = #{record.cityId,jdbcType=VARCHAR},
            </if>
            <if test="record.city != null">
                city = #{record.city,jdbcType=VARCHAR},
            </if>
            <if test="record.countyId != null">
                county_id = #{record.countyId,jdbcType=VARCHAR},
            </if>
            <if test="record.county != null">
                county = #{record.county,jdbcType=VARCHAR},
            </if>
            <if test="record.areaId != null">
                area_id = #{record.areaId,jdbcType=VARCHAR},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=VARCHAR},
            </if>
            <if test="record.ispId != null">
                isp_id = #{record.ispId,jdbcType=VARCHAR},
            </if>
            <if test="record.isp != null">
                isp = #{record.isp,jdbcType=VARCHAR},
            </if>
            <if test="record.ipAddress != null">
                ip_address = #{record.ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.loginTime != null">
                login_time = #{record.loginTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_login_log
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        country_id = #{record.countryId,jdbcType=VARCHAR},
        country = #{record.country,jdbcType=VARCHAR},
        region_id = #{record.regionId,jdbcType=VARCHAR},
        region = #{record.region,jdbcType=VARCHAR},
        city_id = #{record.cityId,jdbcType=VARCHAR},
        city = #{record.city,jdbcType=VARCHAR},
        county_id = #{record.countyId,jdbcType=VARCHAR},
        county = #{record.county,jdbcType=VARCHAR},
        area_id = #{record.areaId,jdbcType=VARCHAR},
        area = #{record.area,jdbcType=VARCHAR},
        isp_id = #{record.ispId,jdbcType=VARCHAR},
        isp = #{record.isp,jdbcType=VARCHAR},
        ip_address = #{record.ipAddress,jdbcType=VARCHAR},
        login_time = #{record.loginTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.UserLoginLog">
        update user_login_log
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="countryId != null">
                country_id = #{countryId,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                country = #{country,jdbcType=VARCHAR},
            </if>
            <if test="regionId != null">
                region_id = #{regionId,jdbcType=VARCHAR},
            </if>
            <if test="region != null">
                region = #{region,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                city_id = #{cityId,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="countyId != null">
                county_id = #{countyId,jdbcType=VARCHAR},
            </if>
            <if test="county != null">
                county = #{county,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null">
                area_id = #{areaId,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="ispId != null">
                isp_id = #{ispId,jdbcType=VARCHAR},
            </if>
            <if test="isp != null">
                isp = #{isp,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null">
                ip_address = #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.UserLoginLog">
    update user_login_log
    set user_id = #{userId,jdbcType=INTEGER},
      country_id = #{countryId,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      region_id = #{regionId,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      county_id = #{countyId,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      isp_id = #{ispId,jdbcType=VARCHAR},
      isp = #{isp,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <sql id="PageSuffix">
        <if test="page != null">
            limit #{page.rowStart},#{page.pageSize}
        </if>
    </sql>
</mapper>
