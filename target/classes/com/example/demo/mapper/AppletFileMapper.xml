<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.AppletFileMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.AppletFile">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="type_id" jdbcType="INTEGER" property="typeId"/>
        <result column="file_path" jdbcType="VARCHAR" property="filePath"/>
        <result column="version_number" jdbcType="VARCHAR" property="versionNumber"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="file_status" jdbcType="BIT" property="fileStatus"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, type_id, file_path, version_number, update_time, file_status
  </sql>
    <select id="selectByExample" parameterType="com.example.demo.entity.AppletFileExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from applet_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="PageSuffix"/>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from applet_file
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from applet_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.demo.entity.AppletFileExample">
        delete from applet_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.demo.entity.AppletFile">
    insert into applet_file (id, type_id, file_path,
      version_number, update_time, file_status
      )
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{filePath,jdbcType=VARCHAR},
      #{versionNumber,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{fileStatus,jdbcType=BIT}
      )
  </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.example.demo.entity.AppletFile"
            useGeneratedKeys="true">
        insert into applet_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="filePath != null">
                file_path,
            </if>
            <if test="versionNumber != null">
                version_number,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="fileStatus != null">
                file_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="filePath != null">
                #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="versionNumber != null">
                #{versionNumber,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="fileStatus != null">
                #{fileStatus,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.demo.entity.AppletFileExample" resultType="java.lang.Long">
        select count(*) from applet_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update applet_file
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.typeId != null">
                type_id = #{record.typeId,jdbcType=INTEGER},
            </if>
            <if test="record.filePath != null">
                file_path = #{record.filePath,jdbcType=VARCHAR},
            </if>
            <if test="record.versionNumber != null">
                version_number = #{record.versionNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.fileStatus != null">
                file_status = #{record.fileStatus,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update applet_file
        set id = #{record.id,jdbcType=INTEGER},
        type_id = #{record.typeId,jdbcType=INTEGER},
        file_path = #{record.filePath,jdbcType=VARCHAR},
        version_number = #{record.versionNumber,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        file_status = #{record.fileStatus,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.AppletFile">
        update applet_file
        <set>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="filePath != null">
                file_path = #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="versionNumber != null">
                version_number = #{versionNumber,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="fileStatus != null">
                file_status = #{fileStatus,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.AppletFile">
    update applet_file
    set type_id = #{typeId,jdbcType=INTEGER},
      file_path = #{filePath,jdbcType=VARCHAR},
      version_number = #{versionNumber,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      file_status = #{fileStatus,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <sql id="PageSuffix">
        <if test="page != null">
            limit #{page.rowStart},#{page.pageSize}
        </if>
    </sql>
</mapper>
